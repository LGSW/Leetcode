import math
class Solution(object):
    def minEatingSpeed(self, piles, H):
        """
        :type piles: List[int]
        :type H: int
        :rtype: int
        """
        x = H // len(piles)
        #left = 1; right = max(piles)
        left = max(min(piles)//x,1) ; right = max(max(piles)//x, 1)
        while(left < right):
            mid = (left + right) // 2
            sum = 0
            for n in piles:
                sum += math.ceil(n / mid)
            if sum <= H:
                right = mid
            else:
                left = mid + 1
        return left


    def minEatingSpeed2(self, piles, H):
        p = sorted(piles)
        for i in range(1,p[-1]):
            sum = 0
            for n in piles:
                sum += math.ceil(n/i)
            if sum <= H:
                return i
        return p[-1]


x = Solution()
print(x.minEatingSpeed([3], 8))
print(x.minEatingSpeed([3,6,7,11], 8))
print(x.minEatingSpeed([30,11,23,4,20], 5))
print(x.minEatingSpeed([30,11,23,4,20], 6))
print(x.minEatingSpeed([332484035,524908576,855865114,632922376,222257295,690155293,112677673,679580077,337406589,290818316,877337160,901728858,679284947,688210097,692137887,718203285,629455728,941802184],823855818))
print(x.minEatingSpeed([39349742, 831289353, 94850537, 202034161, 822483820, 291480005, 364718307, 770576016, 292917001, 158974257, 176779490, 760021356, 231880507, 134164940, 254947915, 96989008, 966910957, 894767905, 792919810, 869260763, 647220238, 859344539, 605456204, 658422209, 569973321, 656339242, 761737615, 867843658, 730633048, 151226077, 801884316, 311330456, 549743513, 47760535, 959446424, 281582738, 394416654, 507455630, 761654157, 380907757, 743234081, 623056110, 747328886, 22109582, 647024366, 838123981, 346932270, 123795194, 426587868, 558806199, 159727343, 693528114, 344036223, 559859122, 429821193, 348971634, 3091849, 27424527, 814018624, 719679300, 514700567, 815327270, 203518801, 817418294, 226395029, 58054217, 312644437, 953205909, 974835316, 266039616, 187830655, 362467625, 212023446, 759856185, 29858395, 892618709, 771251382, 350458995, 804946748, 654101839, 308468227, 82459871, 600937188, 902889439, 977038286, 795037904, 103459934, 538278811, 675744885, 787296013, 874459137], 692180597))